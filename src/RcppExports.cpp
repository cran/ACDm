// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// group_running_less_than
NumericVector group_running_less_than(NumericVector x, double c, bool group_zeores);
RcppExport SEXP _ACDm_group_running_less_than(SEXP xSEXP, SEXP cSEXP, SEXP group_zeoresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    Rcpp::traits::input_parameter< bool >::type group_zeores(group_zeoresSEXP);
    rcpp_result_gen = Rcpp::wrap(group_running_less_than(x, c, group_zeores));
    return rcpp_result_gen;
END_RCPP
}
// time_rolling_ntrans_left
SEXP time_rolling_ntrans_left(NumericVector x, double window_size);
RcppExport SEXP _ACDm_time_rolling_ntrans_left(SEXP xSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(time_rolling_ntrans_left(x, window_size));
    return rcpp_result_gen;
END_RCPP
}
// time_rolling_ntrans_right
SEXP time_rolling_ntrans_right(NumericVector x, double window_size);
RcppExport SEXP _ACDm_time_rolling_ntrans_right(SEXP xSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(time_rolling_ntrans_right(x, window_size));
    return rcpp_result_gen;
END_RCPP
}
// roll_time_mean
NumericVector roll_time_mean(NumericVector x, double width, StringVector align);
RcppExport SEXP _ACDm_roll_time_mean(SEXP xSEXP, SEXP widthSEXP, SEXP alignSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< StringVector >::type align(alignSEXP);
    rcpp_result_gen = Rcpp::wrap(roll_time_mean(x, width, align));
    return rcpp_result_gen;
END_RCPP
}
// roll_time_count
NumericVector roll_time_count(NumericVector x, double width, StringVector align);
RcppExport SEXP _ACDm_roll_time_count(SEXP xSEXP, SEXP widthSEXP, SEXP alignSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type width(widthSEXP);
    Rcpp::traits::input_parameter< StringVector >::type align(alignSEXP);
    rcpp_result_gen = Rcpp::wrap(roll_time_count(x, width, align));
    return rcpp_result_gen;
END_RCPP
}
// sumOuter
List sumOuter(NumericMatrix d_LL_d_theta, NumericMatrix d_psi_d_theta, NumericVector psi);
RcppExport SEXP _ACDm_sumOuter(SEXP d_LL_d_thetaSEXP, SEXP d_psi_d_thetaSEXP, SEXP psiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type d_LL_d_theta(d_LL_d_thetaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type d_psi_d_theta(d_psi_d_thetaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type psi(psiSEXP);
    rcpp_result_gen = Rcpp::wrap(sumOuter(d_LL_d_theta, d_psi_d_theta, psi));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreTACD
List computeScoreTACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType, NumericVector bp);
RcppExport SEXP _ACDm_computeScoreTACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP, SEXP bpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bp(bpSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreTACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType, bp));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreTAMACD
List computeScoreTAMACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType, NumericVector bp);
RcppExport SEXP _ACDm_computeScoreTAMACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP, SEXP bpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bp(bpSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreTAMACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType, bp));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreLSNIACD
List computeScoreLSNIACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType, NumericVector bp);
RcppExport SEXP _ACDm_computeScoreLSNIACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP, SEXP bpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bp(bpSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreLSNIACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType, bp));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreSNIACD
List computeScoreSNIACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType, NumericVector bp);
RcppExport SEXP _ACDm_computeScoreSNIACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP, SEXP bpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bp(bpSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreSNIACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType, bp));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreABACD
List computeScoreABACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreABACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreABACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreAMACD
List computeScoreAMACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreAMACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreAMACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreBCACD
List computeScoreBCACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreBCACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreBCACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreBACD
List computeScoreBACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreBACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreBACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreEXACD
List computeScoreEXACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreEXACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreEXACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreLACD2
List computeScoreLACD2(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreLACD2(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreLACD2(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreLACD1
List computeScoreLACD1(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreLACD1(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreLACD1(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreACD
List computeScoreACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeScoreAACD
List computeScoreAACD(NumericVector x, NumericVector param, NumericVector order, double mean, int dist, NumericVector distPara, IntegerVector newDayR, int forceErrExpec, int returnIndex, int startType);
RcppExport SEXP _ACDm_computeScoreAACD(SEXP xSEXP, SEXP paramSEXP, SEXP orderSEXP, SEXP meanSEXP, SEXP distSEXP, SEXP distParaSEXP, SEXP newDayRSEXP, SEXP forceErrExpecSEXP, SEXP returnIndexSEXP, SEXP startTypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type param(paramSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< int >::type dist(distSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type distPara(distParaSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type newDayR(newDayRSEXP);
    Rcpp::traits::input_parameter< int >::type forceErrExpec(forceErrExpecSEXP);
    Rcpp::traits::input_parameter< int >::type returnIndex(returnIndexSEXP);
    Rcpp::traits::input_parameter< int >::type startType(startTypeSEXP);
    rcpp_result_gen = Rcpp::wrap(computeScoreAACD(x, param, order, mean, dist, distPara, newDayR, forceErrExpec, returnIndex, startType));
    return rcpp_result_gen;
END_RCPP
}
// computeDurationsSubSec_wrap
Rcpp::List computeDurationsSubSec_wrap(Rcpp::IntegerVector y, Rcpp::IntegerVector M, Rcpp::IntegerVector d, Rcpp::IntegerVector h, Rcpp::IntegerVector m, Rcpp::NumericVector s, Rcpp::IntegerVector vol, Rcpp::NumericVector price, double open, double close, int durType_scalar, int zeroDurHandeling_scalar, double priceChange_scalar, int cumVol_scalar);
RcppExport SEXP _ACDm_computeDurationsSubSec_wrap(SEXP ySEXP, SEXP MSEXP, SEXP dSEXP, SEXP hSEXP, SEXP mSEXP, SEXP sSEXP, SEXP volSEXP, SEXP priceSEXP, SEXP openSEXP, SEXP closeSEXP, SEXP durType_scalarSEXP, SEXP zeroDurHandeling_scalarSEXP, SEXP priceChange_scalarSEXP, SEXP cumVol_scalarSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type M(MSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type vol(volSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type price(priceSEXP);
    Rcpp::traits::input_parameter< double >::type open(openSEXP);
    Rcpp::traits::input_parameter< double >::type close(closeSEXP);
    Rcpp::traits::input_parameter< int >::type durType_scalar(durType_scalarSEXP);
    Rcpp::traits::input_parameter< int >::type zeroDurHandeling_scalar(zeroDurHandeling_scalarSEXP);
    Rcpp::traits::input_parameter< double >::type priceChange_scalar(priceChange_scalarSEXP);
    Rcpp::traits::input_parameter< int >::type cumVol_scalar(cumVol_scalarSEXP);
    rcpp_result_gen = Rcpp::wrap(computeDurationsSubSec_wrap(y, M, d, h, m, s, vol, price, open, close, durType_scalar, zeroDurHandeling_scalar, priceChange_scalar, cumVol_scalar));
    return rcpp_result_gen;
END_RCPP
}
// computeDurationsShort_wrap
Rcpp::List computeDurationsShort_wrap(Rcpp::IntegerVector y, Rcpp::IntegerVector M, Rcpp::IntegerVector d, Rcpp::IntegerVector h, Rcpp::IntegerVector m, Rcpp::NumericVector s, int open, int close, int zeroDurHandeling);
RcppExport SEXP _ACDm_computeDurationsShort_wrap(SEXP ySEXP, SEXP MSEXP, SEXP dSEXP, SEXP hSEXP, SEXP mSEXP, SEXP sSEXP, SEXP openSEXP, SEXP closeSEXP, SEXP zeroDurHandelingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type M(MSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type h(hSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type open(openSEXP);
    Rcpp::traits::input_parameter< int >::type close(closeSEXP);
    Rcpp::traits::input_parameter< int >::type zeroDurHandeling(zeroDurHandelingSEXP);
    rcpp_result_gen = Rcpp::wrap(computeDurationsShort_wrap(y, M, d, h, m, s, open, close, zeroDurHandeling));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP getLL_AACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_AACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_ABACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_ABACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_ACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_ACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_AMACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_AMACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_BACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_BACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_BCACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_BCACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_EXACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_EXACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_LACD1call(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_LACD1callEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_LACD2call(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_LACD2callEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_logSNIACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_logSNIACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_SNIACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_SNIACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_TACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_TACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_TAMACDcall(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP getLL_TAMACDcallEx(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_AACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_ABACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_ACDCALL(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_AMACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_BACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_BCACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_EXACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_LACD1(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_LACD2(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_LSNIACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_SNIACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_TACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP sim_TAMACD(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_ACDm_group_running_less_than", (DL_FUNC) &_ACDm_group_running_less_than, 3},
    {"_ACDm_time_rolling_ntrans_left", (DL_FUNC) &_ACDm_time_rolling_ntrans_left, 2},
    {"_ACDm_time_rolling_ntrans_right", (DL_FUNC) &_ACDm_time_rolling_ntrans_right, 2},
    {"_ACDm_roll_time_mean", (DL_FUNC) &_ACDm_roll_time_mean, 3},
    {"_ACDm_roll_time_count", (DL_FUNC) &_ACDm_roll_time_count, 3},
    {"_ACDm_sumOuter", (DL_FUNC) &_ACDm_sumOuter, 3},
    {"_ACDm_computeScoreTACD", (DL_FUNC) &_ACDm_computeScoreTACD, 11},
    {"_ACDm_computeScoreTAMACD", (DL_FUNC) &_ACDm_computeScoreTAMACD, 11},
    {"_ACDm_computeScoreLSNIACD", (DL_FUNC) &_ACDm_computeScoreLSNIACD, 11},
    {"_ACDm_computeScoreSNIACD", (DL_FUNC) &_ACDm_computeScoreSNIACD, 11},
    {"_ACDm_computeScoreABACD", (DL_FUNC) &_ACDm_computeScoreABACD, 10},
    {"_ACDm_computeScoreAMACD", (DL_FUNC) &_ACDm_computeScoreAMACD, 10},
    {"_ACDm_computeScoreBCACD", (DL_FUNC) &_ACDm_computeScoreBCACD, 10},
    {"_ACDm_computeScoreBACD", (DL_FUNC) &_ACDm_computeScoreBACD, 10},
    {"_ACDm_computeScoreEXACD", (DL_FUNC) &_ACDm_computeScoreEXACD, 10},
    {"_ACDm_computeScoreLACD2", (DL_FUNC) &_ACDm_computeScoreLACD2, 10},
    {"_ACDm_computeScoreLACD1", (DL_FUNC) &_ACDm_computeScoreLACD1, 10},
    {"_ACDm_computeScoreACD", (DL_FUNC) &_ACDm_computeScoreACD, 10},
    {"_ACDm_computeScoreAACD", (DL_FUNC) &_ACDm_computeScoreAACD, 10},
    {"_ACDm_computeDurationsSubSec_wrap", (DL_FUNC) &_ACDm_computeDurationsSubSec_wrap, 14},
    {"_ACDm_computeDurationsShort_wrap", (DL_FUNC) &_ACDm_computeDurationsShort_wrap, 9},
    {"getLL_AACDcall",        (DL_FUNC) &getLL_AACDcall,         8},
    {"getLL_AACDcallEx",      (DL_FUNC) &getLL_AACDcallEx,       9},
    {"getLL_ABACDcall",       (DL_FUNC) &getLL_ABACDcall,        8},
    {"getLL_ABACDcallEx",     (DL_FUNC) &getLL_ABACDcallEx,      9},
    {"getLL_ACDcall",         (DL_FUNC) &getLL_ACDcall,          8},
    {"getLL_ACDcallEx",       (DL_FUNC) &getLL_ACDcallEx,        9},
    {"getLL_AMACDcall",       (DL_FUNC) &getLL_AMACDcall,        8},
    {"getLL_AMACDcallEx",     (DL_FUNC) &getLL_AMACDcallEx,      9},
    {"getLL_BACDcall",        (DL_FUNC) &getLL_BACDcall,         8},
    {"getLL_BACDcallEx",      (DL_FUNC) &getLL_BACDcallEx,       9},
    {"getLL_BCACDcall",       (DL_FUNC) &getLL_BCACDcall,        8},
    {"getLL_BCACDcallEx",     (DL_FUNC) &getLL_BCACDcallEx,      9},
    {"getLL_EXACDcall",       (DL_FUNC) &getLL_EXACDcall,        8},
    {"getLL_EXACDcallEx",     (DL_FUNC) &getLL_EXACDcallEx,      9},
    {"getLL_LACD1call",       (DL_FUNC) &getLL_LACD1call,        8},
    {"getLL_LACD1callEx",     (DL_FUNC) &getLL_LACD1callEx,      9},
    {"getLL_LACD2call",       (DL_FUNC) &getLL_LACD2call,        8},
    {"getLL_LACD2callEx",     (DL_FUNC) &getLL_LACD2callEx,      9},
    {"getLL_logSNIACDcall",   (DL_FUNC) &getLL_logSNIACDcall,    9},
    {"getLL_logSNIACDcallEx", (DL_FUNC) &getLL_logSNIACDcallEx, 10},
    {"getLL_SNIACDcall",      (DL_FUNC) &getLL_SNIACDcall,       9},
    {"getLL_SNIACDcallEx",    (DL_FUNC) &getLL_SNIACDcallEx,    10},
    {"getLL_TACDcall",        (DL_FUNC) &getLL_TACDcall,        11},
    {"getLL_TACDcallEx",      (DL_FUNC) &getLL_TACDcallEx,      12},
    {"getLL_TAMACDcall",      (DL_FUNC) &getLL_TAMACDcall,      11},
    {"getLL_TAMACDcallEx",    (DL_FUNC) &getLL_TAMACDcallEx,    12},
    {"sim_AACD",              (DL_FUNC) &sim_AACD,               7},
    {"sim_ABACD",             (DL_FUNC) &sim_ABACD,              7},
    {"sim_ACDCALL",           (DL_FUNC) &sim_ACDCALL,            7},
    {"sim_AMACD",             (DL_FUNC) &sim_AMACD,              7},
    {"sim_BACD",              (DL_FUNC) &sim_BACD,               7},
    {"sim_BCACD",             (DL_FUNC) &sim_BCACD,              7},
    {"sim_EXACD",             (DL_FUNC) &sim_EXACD,              7},
    {"sim_LACD1",             (DL_FUNC) &sim_LACD1,              7},
    {"sim_LACD2",             (DL_FUNC) &sim_LACD2,              7},
    {"sim_LSNIACD",           (DL_FUNC) &sim_LSNIACD,            8},
    {"sim_SNIACD",            (DL_FUNC) &sim_SNIACD,             8},
    {"sim_TACD",              (DL_FUNC) &sim_TACD,               8},
    {"sim_TAMACD",            (DL_FUNC) &sim_TAMACD,             8},
    {NULL, NULL, 0}
};

RcppExport void R_init_ACDm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
